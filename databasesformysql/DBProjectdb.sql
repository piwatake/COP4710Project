-- MySQL Script generated by MySQL Workbench
-- 03/26/15 17:46:28
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`User` (
  `userID` INT NOT NULL,
  `password` VARCHAR(45) NULL,
  PRIMARY KEY (`userID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`SuperAdmin`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`SuperAdmin` (
  `SuperAdminID` INT NOT NULL,
  `User_userID` INT NOT NULL,
  PRIMARY KEY (`SuperAdminID`),
  INDEX `fk_SuperAdmin_User1_idx` (`User_userID` ASC),
  CONSTRAINT `fk_SuperAdmin_User1`
    FOREIGN KEY (`User_userID`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`table3`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`table3` (
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Student` (
  `StudentID` INT NOT NULL,
  `User_userID` INT NOT NULL,
  PRIMARY KEY (`StudentID`),
  INDEX `fk_Student_User_idx` (`User_userID` ASC),
  CONSTRAINT `fk_Student_User`
    FOREIGN KEY (`User_userID`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Admin`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Admin` (
  `AdminID` INT NOT NULL,
  `User_userID` INT NOT NULL,
  PRIMARY KEY (`AdminID`),
  INDEX `fk_Admin_User1_idx` (`User_userID` ASC),
  CONSTRAINT `fk_Admin_User1`
    FOREIGN KEY (`User_userID`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`University`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`University` (
  `UniversityID` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `Location` VARCHAR(45) NULL,
  `Description` VARCHAR(45) NULL,
  `numStudents` INT NULL,
  `Universitycol` VARCHAR(45) NULL,
  PRIMARY KEY (`UniversityID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`RSO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`RSO` (
  `rsoname` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`rsoname`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`AdminHosts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`AdminHosts` (
  `Admin_AdminID` INT NOT NULL,
  PRIMARY KEY (`Admin_AdminID`),
  CONSTRAINT `fk_HostedBy_Admin1`
    FOREIGN KEY (`Admin_AdminID`)
    REFERENCES `mydb`.`Admin` (`AdminID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Event` (
  `EventID` INT NOT NULL,
  `EventCat` VARCHAR(45) NULL,
  `EventName` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `Time` TIME NULL,
  `Date` DATE NULL,
  `ContactPhone` INT NULL,
  `ContactEmail` VARCHAR(45) NULL,
  `HostedBy_Admin_AdminID` INT NOT NULL,
  PRIMARY KEY (`EventID`, `HostedBy_Admin_AdminID`),
  INDEX `fk_Event_HostedBy1_idx` (`HostedBy_Admin_AdminID` ASC),
  CONSTRAINT `fk_Event_HostedBy1`
    FOREIGN KEY (`HostedBy_Admin_AdminID`)
    REFERENCES `mydb`.`AdminHosts` (`Admin_AdminID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Location` (
  `Name` VARCHAR(45) NOT NULL,
  `Latitude` VARCHAR(45) NULL,
  `Longitude` VARCHAR(45) NULL,
  PRIMARY KEY (`Name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`CreatesProfile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`CreatesProfile` (
  `SuperAdmin_SuperAdminID` INT NOT NULL,
  `University_UniversityID` INT NOT NULL,
  PRIMARY KEY (`SuperAdmin_SuperAdminID`, `University_UniversityID`),
  INDEX `fk_CreatesProfile_University1_idx` (`University_UniversityID` ASC),
  CONSTRAINT `fk_CreatesProfile_SuperAdmin1`
    FOREIGN KEY (`SuperAdmin_SuperAdminID`)
    REFERENCES `mydb`.`SuperAdmin` (`SuperAdminID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CreatesProfile_University1`
    FOREIGN KEY (`University_UniversityID`)
    REFERENCES `mydb`.`University` (`UniversityID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`hasLocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`hasLocation` (
  `Event_EventID` INT NOT NULL,
  `Event_HostedBy_Admin_AdminID` INT NOT NULL,
  `Location_Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Event_EventID`, `Event_HostedBy_Admin_AdminID`, `Location_Name`),
  INDEX `fk_hasLocation_Location1_idx` (`Location_Name` ASC),
  CONSTRAINT `fk_hasLocation_Event1`
    FOREIGN KEY (`Event_EventID` , `Event_HostedBy_Admin_AdminID`)
    REFERENCES `mydb`.`Event` (`EventID` , `HostedBy_Admin_AdminID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_hasLocation_Location1`
    FOREIGN KEY (`Location_Name`)
    REFERENCES `mydb`.`Location` (`Name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Ownedby`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Ownedby` (
  `Admin_AdminID` INT NOT NULL,
  `RSO_rsoname` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Admin_AdminID`, `RSO_rsoname`),
  INDEX `fk_Ownedby_RSO1_idx` (`RSO_rsoname` ASC),
  CONSTRAINT `fk_Ownedby_Admin1`
    FOREIGN KEY (`Admin_AdminID`)
    REFERENCES `mydb`.`Admin` (`AdminID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Ownedby_RSO1`
    FOREIGN KEY (`RSO_rsoname`)
    REFERENCES `mydb`.`RSO` (`rsoname`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`AffiliatedUniversity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`AffiliatedUniversity` (
  `Admin_AdminID` INT NOT NULL,
  `University_UniversityID` INT NOT NULL,
  PRIMARY KEY (`Admin_AdminID`, `University_UniversityID`),
  INDEX `fk_AffiliatedUniversity_University1_idx` (`University_UniversityID` ASC),
  CONSTRAINT `fk_AffiliatedUniversity_Admin1`
    FOREIGN KEY (`Admin_AdminID`)
    REFERENCES `mydb`.`Admin` (`AdminID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_AffiliatedUniversity_University1`
    FOREIGN KEY (`University_UniversityID`)
    REFERENCES `mydb`.`University` (`UniversityID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
